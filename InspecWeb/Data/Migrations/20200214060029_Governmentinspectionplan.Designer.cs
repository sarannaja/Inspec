// <auto-generated />
using System;
using InspecWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InspecWeb.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200214060029_Governmentinspectionplan")]
    partial class Governmentinspectionplan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("InspecWeb.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CentralPolicies");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.ToTable("CentralPolicyFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("MinistryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MinistryId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MinistryId = 1L,
                            Name = "ทหารบก"
                        },
                        new
                        {
                            Id = 2L,
                            MinistryId = 2L,
                            Name = "อย."
                        });
                });

            modelBuilder.Entity("InspecWeb.Models.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("InspecWeb.Models.FiscalYear", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FiscalYear");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Year = 2563
                        });
                });

            modelBuilder.Entity("InspecWeb.Models.Governmentinspectionplan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Governmentinspectionplans");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            File = "inps_plan63.pdf",
                            Title = "แผนการตรวจราชการแบบบบูรณาการของผู้ตรวจราชการ ประจำปีงบประมาณ พ.ศ. 2563",
                            Year = "2563"
                        },
                        new
                        {
                            Id = 2L,
                            File = "plan_61.pdf",
                            Title = "แผนการตรวจราชการแบบบบูรณาการของผู้ตรวจราชการ ประจำปีงบประมาณ พ.ศ. 2561",
                            Year = "2561"
                        },
                        new
                        {
                            Id = 3L,
                            File = "plan60.pdf",
                            Title = "แผนการตรวจราชการแบบบูรณาการ ของผู้ตรวจราชการ ประจำปีงบประมาณ พ.ศ. 2560",
                            Year = "2560"
                        },
                        new
                        {
                            Id = 4L,
                            File = "plan59.pdf",
                            Title = "แผนการตรวจราชการแบบบูรณาการประจำปีงบประมาณ พ.ศ. 2559",
                            Year = "2559"
                        },
                        new
                        {
                            Id = 5L,
                            File = "insp_plan58.zip",
                            Title = "แผนการตรวจราชการแบบบูรณาการประจำปีงบประมาณ พ.ศ. 2558",
                            Year = "2558"
                        },
                        new
                        {
                            Id = 6L,
                            File = "plan57.zip",
                            Title = "แผนการตรวจราชการแบบบูรรณาการ ของผู้ตรวจราชการ ประจำปีงบประมาณ พ.ศ. 2557",
                            Year = "2557"
                        },
                        new
                        {
                            Id = 7L,
                            File = "plan56.zip",
                            Title = "แผนการตรวจราชการแบบบูรรณาการ ของผู้ตรวจราชการ ประจำปีงบประมาณ พ.ศ. 2556",
                            Year = "2556"
                        },
                        new
                        {
                            Id = 8L,
                            File = "plan55.zip",
                            Title = "แผนการตรวจราชการแบบบูรณาการ ของผู้ตรวจราชการ ประจำปีงบประมาณ พ.ศ. 2555",
                            Year = "2555"
                        },
                        new
                        {
                            Id = 9L,
                            File = "plan54.zip",
                            Title = "แผนการตรวจราชการแบบบูรณาการ ประจำปีงบประมาณ พ.ศ.2554",
                            Year = "2554"
                        },
                        new
                        {
                            Id = 10L,
                            File = "NULL",
                            Title = "แผนการตรวจราชการแบบบูรณาการเพื่อมุ่งผลสัมฤทธิ์ตามนโยบายรัฐบาลประจำปีงบประมาณ พ.ศ.2553ของผู้ตรวจราชการ",
                            Year = "2553"
                        },
                        new
                        {
                            Id = 11L,
                            File = "plan52.pdf",
                            Title = "แผนการตรวจราชการแบบบูรณาการเพื่อมุ่งผลสัมฤทธิ์ตามนโยบายรัฐบาลประจำปีงบประมาณ พ.ศ. 2552",
                            Year = "2552"
                        },
                        new
                        {
                            Id = 12L,
                            File = "NULL",
                            Title = "แผนยุทธศาสตร์การตรวจราชการแบบบูรณาการเพื่อมุ่งผลสัมฤทธิ์ตามนโยบายรัฐบาลประจำปีงบประมาณ พ.ศ. 2551",
                            Year = "2551"
                        });
                });

            modelBuilder.Entity("InspecWeb.Models.Ministry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ministries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "สำนักนายกรัฐมนตรี"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "กระทรวงกลาโหม"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "กระทรวงการคลัง"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "กระทรวงการต่างประเทศ"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "กระทรวงการท่องเที่ยวและกีฬา"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "กระทรวงการพัฒนาสังคมและความมั่นคงของมนุษย์"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "กระทรวงเกษตรและสหกรณ์"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "กระทรวงคมนาคม"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "กระทรวงทรัพยากรธรรมชาติและสิ่งแวดล้อม"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "กระทรวงดิจิทัลเพื่อเศรษฐกิจและสังคม"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "กระทรวงพลังงาน"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "กระทรวงพาณิชย์"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "กระทรวงมหาดไทย"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "กระทรวงยุติธรรม"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "กระทรวงแรงงาน"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "กระทรวงวัฒนธรรม"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "กระทรวงการอุดมศึกษา วิทยาศาสตร์ วิจัยและนวัตกรรม"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "กระทรวงสาธารณสุข"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "กระทรวงอุตสาหกรรม"
                        });
                });

            modelBuilder.Entity("InspecWeb.Models.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "กรุงเทพมหานคร"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "กระบี่"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "กาญจนบุรี"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "กาฬสินธุ์"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "กำแพงเพชร"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "ขอนแก่น"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "จันทบุรี"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "ฉะเชิงเทรา"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "ชลบุรี"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "ชัยนาท"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "ชัยภูมิ"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "ชุมพร"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "เชียงราย"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "เชียงใหม่"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "ตรัง"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "ตราด"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "ตาก"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "นครนายก"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "นครปฐม"
                        },
                        new
                        {
                            Id = 20L,
                            Name = "นครพนม"
                        },
                        new
                        {
                            Id = 21L,
                            Name = "นครราชสีมา"
                        },
                        new
                        {
                            Id = 22L,
                            Name = "นครศรีธรรมราช"
                        },
                        new
                        {
                            Id = 23L,
                            Name = "นครสวรรค์"
                        },
                        new
                        {
                            Id = 24L,
                            Name = "นนทบุรี"
                        },
                        new
                        {
                            Id = 25L,
                            Name = "นราธิวาส"
                        },
                        new
                        {
                            Id = 26L,
                            Name = "น่าน"
                        },
                        new
                        {
                            Id = 27L,
                            Name = "บึงกาฬ"
                        },
                        new
                        {
                            Id = 28L,
                            Name = "บุรีรัมย์"
                        },
                        new
                        {
                            Id = 29L,
                            Name = "ปทุมธานี"
                        },
                        new
                        {
                            Id = 30L,
                            Name = "ประจวบคีรีขันธ์"
                        },
                        new
                        {
                            Id = 31L,
                            Name = "ปราจีนบุรี"
                        },
                        new
                        {
                            Id = 32L,
                            Name = "ปัตตานี"
                        },
                        new
                        {
                            Id = 33L,
                            Name = "พระนครศรีอยุธยา"
                        },
                        new
                        {
                            Id = 34L,
                            Name = "พะเยา"
                        },
                        new
                        {
                            Id = 35L,
                            Name = "พังงา"
                        },
                        new
                        {
                            Id = 36L,
                            Name = "พัทลุง"
                        },
                        new
                        {
                            Id = 37L,
                            Name = "พิจิตร"
                        },
                        new
                        {
                            Id = 38L,
                            Name = "พิษณุโลก"
                        },
                        new
                        {
                            Id = 39L,
                            Name = "เพชรบุรี"
                        },
                        new
                        {
                            Id = 40L,
                            Name = "เพชรบูรณ์"
                        },
                        new
                        {
                            Id = 41L,
                            Name = "แพร่"
                        },
                        new
                        {
                            Id = 42L,
                            Name = "ภูเก็ต"
                        },
                        new
                        {
                            Id = 43L,
                            Name = "มหาสารคาม"
                        },
                        new
                        {
                            Id = 44L,
                            Name = "มุกดาหาร"
                        },
                        new
                        {
                            Id = 45L,
                            Name = "แม่ฮ่องสอน"
                        },
                        new
                        {
                            Id = 46L,
                            Name = "ยโสธร"
                        },
                        new
                        {
                            Id = 47L,
                            Name = "ยะลา"
                        },
                        new
                        {
                            Id = 48L,
                            Name = "ร้อยเอ็ด"
                        },
                        new
                        {
                            Id = 49L,
                            Name = "ระนอง"
                        },
                        new
                        {
                            Id = 50L,
                            Name = "ระยอง"
                        },
                        new
                        {
                            Id = 51L,
                            Name = "ราชบุรี"
                        },
                        new
                        {
                            Id = 52L,
                            Name = "ลพบุรี"
                        },
                        new
                        {
                            Id = 53L,
                            Name = "ลำปาง"
                        },
                        new
                        {
                            Id = 54L,
                            Name = "ลำพูน"
                        },
                        new
                        {
                            Id = 55L,
                            Name = "เลย"
                        },
                        new
                        {
                            Id = 56L,
                            Name = "ศรีสะเกษ"
                        },
                        new
                        {
                            Id = 57L,
                            Name = "สกลนคร"
                        },
                        new
                        {
                            Id = 58L,
                            Name = "สงขลา"
                        },
                        new
                        {
                            Id = 59L,
                            Name = "สตูล"
                        },
                        new
                        {
                            Id = 60L,
                            Name = "สมุทรปราการ"
                        },
                        new
                        {
                            Id = 61L,
                            Name = "สมุทรสงคราม"
                        },
                        new
                        {
                            Id = 62L,
                            Name = "สมุทรสาคร"
                        },
                        new
                        {
                            Id = 63L,
                            Name = "สระแก้ว"
                        },
                        new
                        {
                            Id = 64L,
                            Name = "สระบุรี"
                        },
                        new
                        {
                            Id = 65L,
                            Name = "สิงห์บุรี"
                        },
                        new
                        {
                            Id = 66L,
                            Name = "สุโขทัย"
                        },
                        new
                        {
                            Id = 67L,
                            Name = "สุพรรณบุรี"
                        },
                        new
                        {
                            Id = 68L,
                            Name = "สุราษฎร์ธานี"
                        },
                        new
                        {
                            Id = 69L,
                            Name = "สุรินทร์"
                        },
                        new
                        {
                            Id = 70L,
                            Name = "หนองคาย"
                        },
                        new
                        {
                            Id = 71L,
                            Name = "หนองบัวลำภู"
                        },
                        new
                        {
                            Id = 72L,
                            Name = "อ่างทอง"
                        },
                        new
                        {
                            Id = 73L,
                            Name = "อำนาจเจริญ"
                        },
                        new
                        {
                            Id = 74L,
                            Name = "อุดรธานี"
                        },
                        new
                        {
                            Id = 75L,
                            Name = "อุตรดิตถ์"
                        },
                        new
                        {
                            Id = 76L,
                            Name = "อุทัยธานี"
                        },
                        new
                        {
                            Id = 77L,
                            Name = "อุบลราชธานี"
                        });
                });

            modelBuilder.Entity("InspecWeb.Models.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "เขตตรวจราชส่วนกลาง"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "เขตตรวจราชการที่ 1"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "เขตตรวจราชการที่ 2"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "เขตตรวจราชการที่ 3"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "เขตตรวจราชการที่ 4"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "เขตตรวจราชการที่ 5"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "เขตตรวจราชการที่ 6"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "เขตตรวจราชการที่ 7"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "เขตตรวจราชการที่ 8"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "เขตตรวจราชการที่ 9"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "เขตตรวจราชการที่ 10"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "เขตตรวจราชการที่ 11"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "เขตตรวจราชการที่ 12"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "เขตตรวจราชการที่ 13"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "เขตตรวจราชการที่ 14"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "เขตตรวจราชการที่ 15"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "เขตตรวจราชการที่ 16"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "เขตตรวจราชการที่ 17"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "เขตตรวจราชการที่ 18"
                        },
                        new
                        {
                            Id = 20L,
                            Name = "เขตตรวจราชการที่ 19"
                        });
                });

            modelBuilder.Entity("InspecWeb.Models.Subdistrict", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Subdistrict");
                });

            modelBuilder.Entity("InspecWeb.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("InspecWeb.Models.Village", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubdistrictId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubdistrictId");

                    b.ToTable("Village");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyFile", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("CentralPolicyFiles")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Department", b =>
                {
                    b.HasOne("InspecWeb.Models.Ministry", "Ministry")
                        .WithMany("Departments")
                        .HasForeignKey("MinistryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.District", b =>
                {
                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Subdistrict", b =>
                {
                    b.HasOne("InspecWeb.Models.District", "District")
                        .WithMany("Subdistricts")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Subject", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("Subjects")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Village", b =>
                {
                    b.HasOne("InspecWeb.Models.Subdistrict", "Subdistrict")
                        .WithMany("Village")
                        .HasForeignKey("SubdistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
