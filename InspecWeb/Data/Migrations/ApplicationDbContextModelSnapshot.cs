// <auto-generated />
using System;
using InspecWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InspecWeb.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerCentralPolicyProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AnswerCentralPolicyProvinceStatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("CentralPolicyEventQuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerCentralPolicyProvinceStatusId");

                    b.HasIndex("CentralPolicyEventQuestionId");

                    b.HasIndex("CentralPolicyProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerCentralPolicyProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerCentralPolicyProvinceStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyEventId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyEventId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerCentralPolicyProvinceStatuses");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerExecutiveOrderFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExecutiveOrderAnswerDetailId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveOrderAnswerDetailId");

                    b.ToTable("AnswerExecutiveOrderFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerRecommenDationInspector", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answersuggestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerRecommenDationInspectors");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerRequestOrderFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestOrderAnswerDetailId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestOrderAnswerDetailId");

                    b.ToTable("AnswerRequestOrderFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AnswerSubquestionStatusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubquestionCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerSubquestionStatusId");

                    b.HasIndex("SubquestionCentralPolicyProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerSubquestions");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestionFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerSubquestionFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestionOutsider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("SubquestionCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SenderUserId");

                    b.HasIndex("SubquestionCentralPolicyProvinceId");

                    b.ToTable("AnswerSubquestionOutsiders");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestionStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerSubquestionStatuses");
                });

            modelBuilder.Entity("InspecWeb.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<long>("Active")
                        .HasColumnType("bigint");

                    b.Property<string>("Alley")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Autocreateuser")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Commandnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Commandnumberdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Educational")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstnameen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstnameth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FiscalYearId")
                        .HasColumnType("bigint");

                    b.Property<string>("Housenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastnameen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastnameth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("MinistryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Officephonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Role_id")
                        .HasColumnType("bigint");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SideId")
                        .HasColumnType("bigint");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubdistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telegraphnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("MinistryId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("ProvincialDepartmentId");

                    b.HasIndex("SideId");

                    b.HasIndex("SubdistrictId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("InspecWeb.Models.Approvaldocuments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Approvaldocuments");
                });

            modelBuilder.Entity("InspecWeb.Models.Cabine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cabines");
                });

            modelBuilder.Entity("InspecWeb.Models.CalendarFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InspectionPlanEventId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.HasIndex("InspectionPlanEventId");

                    b.ToTable("CalendarFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CentralDepartments");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralDepartmentProvince", b =>
                {
                    b.Property<long>("CentralDepartmentID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CentralDepartmentID", "ProvinceId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("CentralDepartmentProvince");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FiscalYearNewId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspectionPlanEventId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TypeexaminationplanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("FiscalYearNewId");

                    b.HasIndex("InspectionPlanEventId");

                    b.HasIndex("TypeexaminationplanId");

                    b.ToTable("CentralPolicies");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyDate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.ToTable("CentralPolicyDates");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyDateProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CentralPolicyDateProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("HaveSubject")
                        .HasColumnType("bigint");

                    b.Property<long>("InspectionPlanEventId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.HasIndex("InspectionPlanEventId");

                    b.ToTable("CentralPolicyEvents");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyEventQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyEventId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionPeople")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyEventId");

                    b.ToTable("CentralPolicyEventQuestions");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.ToTable("CentralPolicyFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("CentralPolicyGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Active")
                        .HasColumnType("bigint");

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Step")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("CentralPolicyProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyProvinceEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("InspectionPlanEventId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyProvinceId");

                    b.HasIndex("InspectionPlanEventId");

                    b.ToTable("CentralPolicyProvinceEvents");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("DraftStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ForwardCount")
                        .HasColumnType("bigint");

                    b.Property<string>("ForwardDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForwardEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ForwardExternal")
                        .HasColumnType("bigint");

                    b.Property<string>("ForwardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForwardPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForwardPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InspectionPlanEventId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvitedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyGroupId");

                    b.HasIndex("CentralPolicyId");

                    b.HasIndex("InspectionPlanEventId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("CentralPolicyUsers");
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyUserFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyGroupId");

                    b.ToTable("CentralPolicyUserFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.Circularletter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Circularletter");
                });

            modelBuilder.Entity("InspecWeb.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("MinistryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortnameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortnameTH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MinistryId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("InspecWeb.Models.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("InspecWeb.Models.Documenttemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documenttemplates");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CentralPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElectronicBookType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("ElectronicBooks");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookAccept", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ElectronicBookId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("ElectronicBookAccepts");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElectronicBookId");

                    b.ToTable("ElectronicBookFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyEventId")
                        .HasColumnType("bigint");

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyEventId");

                    b.HasIndex("ElectronicBookId");

                    b.ToTable("ElectronicBookGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookInvite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ElectronicBookId");

                    b.HasIndex("UserId");

                    b.ToTable("ElectronicBookInvite");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookOtherAccept", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AcceptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ElectronicBookProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ElectronicBookProvincialDepartmentId");

                    b.HasIndex("ProvincialDepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("ElectronicBookOtherAccepts");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookProceed", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Proceed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ElectronicBookId");

                    b.HasIndex("UserId");

                    b.ToTable("ElectronicBookProceeds");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookProvinceApproveFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ElectronicBookAcceptId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElectronicBookAcceptId");

                    b.ToTable("ElectronicBookProvinceApproveFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookProvincialDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("ElectronicBookId");

                    b.HasIndex("ProvincialDepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("ElectronicBookProvincialDepartment");
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookSuggestGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyEventId")
                        .HasColumnType("bigint");

                    b.Property<long>("ElectronicBookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyEventId");

                    b.HasIndex("ElectronicBookId");

                    b.ToTable("ElectronicBookSuggestGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Accept")
                        .HasColumnType("bigint");

                    b.Property<long>("Cancel")
                        .HasColumnType("bigint");

                    b.Property<string>("Canceldetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Commanded_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Draft")
                        .HasColumnType("bigint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subjectdetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("publics")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("ExecutiveOrders");
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrderAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExecutiveOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("beaware_date")
                        .HasColumnType("datetime2");

                    b.Property<long>("publics")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveOrderId");

                    b.HasIndex("UserID");

                    b.ToTable("ExecutiveOrderAnswers");
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrderAnswerDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerCounsel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answerdetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ExecutiveOrderAnswerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<long>("publics")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveOrderAnswerId");

                    b.ToTable("ExecutiveOrderAnswerDetail");
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrderFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExecutiveOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveOrderId");

                    b.ToTable("ExecutiveOrderFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.ExportRegistration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExcutiveOerder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExcutiveOerderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("ExportRegistration");
                });

            modelBuilder.Entity("InspecWeb.Models.ExportReportBody", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ExportReportHeadId")
                        .HasColumnType("bigint");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExportReportHeadId");

                    b.ToTable("ExportReportBody");
                });

            modelBuilder.Entity("InspecWeb.Models.ExportReportHead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ministry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("ExportReportHead");
                });

            modelBuilder.Entity("InspecWeb.Models.FiscalYear", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Orderdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FiscalYear");
                });

            modelBuilder.Entity("InspecWeb.Models.FiscalYearNew", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FiscalYearNew");
                });

            modelBuilder.Entity("InspecWeb.Models.FiscalYearRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("FiscalYearId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("RegionId");

                    b.ToTable("FiscalYearRelations");
                });

            modelBuilder.Entity("InspecWeb.Models.Governmentinspectionplan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Governmentinspectionplans");
                });

            modelBuilder.Entity("InspecWeb.Models.ImportReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CentralPolicyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("DetailReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FiscalYearId")
                        .HasColumnType("bigint");

                    b.Property<string>("InspectionRound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitoringTopics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendCommander")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SendCommander");

                    b.HasIndex("ZoneId");

                    b.ToTable("ImportReports");
                });

            modelBuilder.Entity("InspecWeb.Models.ImportReportFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ImportReportId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImportReportId");

                    b.ToTable("ImportReportFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.ImportReportGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyEventId")
                        .HasColumnType("bigint");

                    b.Property<long>("ImportReportId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyEventId");

                    b.HasIndex("ImportReportId");

                    b.ToTable("ImportReportGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.Informationinspection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Informationinspection");
                });

            modelBuilder.Entity("InspecWeb.Models.Informationoperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Informationoperations");
                });

            modelBuilder.Entity("InspecWeb.Models.InspectionOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InspectionOrders");
                });

            modelBuilder.Entity("InspecWeb.Models.InspectionPlanEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvincialDepartmentIdCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleCreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("ProvincialDepartmentIdCreatedBy");

                    b.ToTable("InspectionPlanEvents");
                });

            modelBuilder.Entity("InspecWeb.Models.Inspector", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inspectors");
                });

            modelBuilder.Entity("InspecWeb.Models.InspectorRegion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InspectorId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InspectorId");

                    b.HasIndex("RegionId");

                    b.ToTable("InspectorRegions");
                });

            modelBuilder.Entity("InspecWeb.Models.InstructionOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstructionOrders");
                });

            modelBuilder.Entity("InspecWeb.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Allid")
                        .HasColumnType("bigint");

                    b.Property<string>("DatabaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("InspecWeb.Models.Meetinginformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meetinginformations");
                });

            modelBuilder.Entity("InspecWeb.Models.Ministermonitoring", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ministermonitorings");
                });

            modelBuilder.Entity("InspecWeb.Models.MinistermonitoringRegion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MinistermonitoringId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MinistermonitoringId");

                    b.HasIndex("RegionId");

                    b.ToTable("MinistermonitoringRegions");
                });

            modelBuilder.Entity("InspecWeb.Models.Ministry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Num")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortnameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortnameTH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ministries");
                });

            modelBuilder.Entity("InspecWeb.Models.Nationalstrategy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalstrategies");
                });

            modelBuilder.Entity("InspecWeb.Models.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("noti")
                        .HasColumnType("bigint");

                    b.Property<long>("status")
                        .HasColumnType("bigint");

                    b.Property<long>("xe")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.HasIndex("UserID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("InspecWeb.Models.Premierorder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Premierorders");
                });

            modelBuilder.Entity("InspecWeb.Models.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvincesGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<long>("SectorId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortnameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortnameTH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvincesGroupId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SectorId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("InspecWeb.Models.ProvincesGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProvincesGroup");
                });

            modelBuilder.Entity("InspecWeb.Models.ProvincialDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ProvincialDepartments");
                });

            modelBuilder.Entity("InspecWeb.Models.ProvincialDepartmentProvince", b =>
                {
                    b.Property<long>("ProvincialDepartmentID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ProvincialDepartmentID", "ProvinceId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("ProvincialDepartmentProvince");
                });

            modelBuilder.Entity("InspecWeb.Models.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("InspecWeb.Models.ReportCommander", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ImportReportId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCommanderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ImportReportId");

                    b.HasIndex("UserCommanderId");

                    b.ToTable("ReportCommanders");
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Accept")
                        .HasColumnType("bigint");

                    b.Property<long>("Cancel")
                        .HasColumnType("bigint");

                    b.Property<string>("Canceldetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Commanded_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Draft")
                        .HasColumnType("bigint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subjectdetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("publics")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("RequestOrders");
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrderAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RequestOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("beaware_date")
                        .HasColumnType("datetime2");

                    b.Property<long>("publics")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestOrderId");

                    b.HasIndex("UserID");

                    b.ToTable("RequestOrderAnswers");
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrderAnswerDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerCounsel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answerdetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestOrderAnswerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<long>("publics")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestOrderAnswerId");

                    b.ToTable("RequestOrderAnswerDetail");
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrderFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestOrderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestOrderId");

                    b.ToTable("RequestOrderFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.Sector", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("InspecWeb.Models.SetinspectionareaFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("FiscalYearId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("SetinspectionareaFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.Side", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortnameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortnameTH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Side");
                });

            modelBuilder.Entity("InspecWeb.Models.StatePolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GangId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoundNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StatePolicys");
                });

            modelBuilder.Entity("InspecWeb.Models.Subdistrict", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Subdistricts");
                });

            modelBuilder.Entity("InspecWeb.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("CheckAnswer")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyProvinceId");

                    b.HasIndex("SubjectGroupId");

                    b.ToTable("SubjectCentralPolicyProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvinceFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.ToTable("SubjectCentralPolicyProvinceFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvinceGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubquestionCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvincialDepartmentId");

                    b.HasIndex("SubquestionCentralPolicyProvinceId");

                    b.ToTable("SubjectCentralPolicyProvinceGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvinceUserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubquestionCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.HasIndex("SubquestionCentralPolicyProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectCentralPolicyProvinceUserGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectDate", b =>
                {
                    b.Property<long?>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CentralPolicyDateId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("SubjectId", "CentralPolicyDateId");

                    b.ToTable("SubjectDates");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectDateCentralPolicyProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyDateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyDateProvinceId");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.ToTable("SubjectDateCentralPolicyProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectEventFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectGroupId");

                    b.ToTable("SubjectEventFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Land")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeopleQuestionDeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeopleQuestionNotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvincialDepartmentIdCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleCreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubjectDeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubjectNotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("ProvincialDepartmentIdCreatedBy");

                    b.ToTable("SubjectGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectGroupPeopleQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentralPolicyEventId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentralPolicyEventId");

                    b.HasIndex("SubjectGroupId");

                    b.ToTable("SubjectGroupPeopleQuestions");
                });

            modelBuilder.Entity("InspecWeb.Models.Subquestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Subquestions");
                });

            modelBuilder.Entity("InspecWeb.Models.SubquestionCentralPolicyProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Box")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.ToTable("SubquestionCentralPolicyProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.SubquestionChoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubquestionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubquestionId");

                    b.ToTable("SubquestionChoices");
                });

            modelBuilder.Entity("InspecWeb.Models.SubquestionChoiceCentralPolicyProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubquestionCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubquestionCentralPolicyProvinceId");

                    b.ToTable("SubquestionChoiceCentralPolicyProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.SuggestionSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubjectCentralPolicyProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Suggestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCentralPolicyProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("SuggestionSubject");
                });

            modelBuilder.Entity("InspecWeb.Models.Training", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Generation")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConditionType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.Property<long>("TrainingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingConditions");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TrainingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingDocuments");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingLecturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkHistory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingLecturers");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingLecturerJoinSurvey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingSurveyTopicId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TrainingLecturerJoinSurveys");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DateType")
                        .HasColumnType("bigint");

                    b.Property<string>("IDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TrainingPhaseId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingProgramLoginId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingLogin");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingPhase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Group")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhaseNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TrainingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingPhases");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MinuteEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinuteStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProgramDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramToDress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TrainingPhaseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPhaseId");

                    b.ToTable("TrainingPrograms");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgramFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TrainingProgramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingProgramId");

                    b.ToTable("TrainingProgramFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgramLecturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("TrainingLecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingProgramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingLecturerId");

                    b.HasIndex("TrainingProgramId");

                    b.ToTable("TrainingProgramLecturers");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgramLoginQRCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Afternoon")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Morning")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ProgramDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TrainingProgramId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TrainingProgramId")
                        .IsUnique();

                    b.ToTable("TrainingProgramLoginQRCodes");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegister", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollaboratorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollaboratorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollaboratorPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollaboratorPhoneOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Group1")
                        .HasColumnType("bigint");

                    b.Property<long>("Group10")
                        .HasColumnType("bigint");

                    b.Property<long>("Group2")
                        .HasColumnType("bigint");

                    b.Property<long>("Group3")
                        .HasColumnType("bigint");

                    b.Property<long>("Group4")
                        .HasColumnType("bigint");

                    b.Property<long>("Group5")
                        .HasColumnType("bigint");

                    b.Property<long>("Group6")
                        .HasColumnType("bigint");

                    b.Property<long>("Group7")
                        .HasColumnType("bigint");

                    b.Property<long>("Group8")
                        .HasColumnType("bigint");

                    b.Property<long>("Group9")
                        .HasColumnType("bigint");

                    b.Property<string>("IDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IDCodeCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvincialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RetiredDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Status")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserType")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvincialDepartmentId");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingRegisters");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegisterCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConditionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RegisterId")
                        .HasColumnType("bigint");

                    b.Property<long>("Status")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.HasIndex("RegisterId");

                    b.ToTable("TrainingRegisterConditions");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegisterFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegisterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegisterId");

                    b.ToTable("TrainingRegisterFiles");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegisterGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Group1")
                        .HasColumnType("bigint");

                    b.Property<long>("Group10")
                        .HasColumnType("bigint");

                    b.Property<long>("Group2")
                        .HasColumnType("bigint");

                    b.Property<long>("Group3")
                        .HasColumnType("bigint");

                    b.Property<long>("Group4")
                        .HasColumnType("bigint");

                    b.Property<long>("Group5")
                        .HasColumnType("bigint");

                    b.Property<long>("Group6")
                        .HasColumnType("bigint");

                    b.Property<long>("Group7")
                        .HasColumnType("bigint");

                    b.Property<long>("Group8")
                        .HasColumnType("bigint");

                    b.Property<long>("Group9")
                        .HasColumnType("bigint");

                    b.Property<long>("RegisterId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingPhaseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RegisterId");

                    b.ToTable("TrainingRegisterGroups");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingSurvey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyType")
                        .HasColumnType("int");

                    b.Property<long?>("TrainingId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrainingSurveyTopicId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("TrainingSurveyTopicId");

                    b.ToTable("TrainingSurveys");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingSurveyAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posoition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<long>("TrainingSurveyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingSurveyId");

                    b.ToTable("TrainingSurveyAnswers");
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingSurveyTopic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrainingSurveyTopics");
                });

            modelBuilder.Entity("InspecWeb.Models.Typeexaminationplan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Typeexaminationplans");
                });

            modelBuilder.Entity("InspecWeb.Models.UserProvince", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("UserID", "ProvinceId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("UserProvinces");
                });

            modelBuilder.Entity("InspecWeb.Models.UserRegion", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("UserID", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("UserRegions");
                });

            modelBuilder.Entity("InspecWeb.Models.UserTokenMobile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("UserTokenMobile");
                });

            modelBuilder.Entity("InspecWeb.Models.Village", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubdistrictId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubdistrictId");

                    b.ToTable("Village");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerCentralPolicyProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.AnswerCentralPolicyProvinceStatus", "AnswerCentralPolicyProvinceStatus")
                        .WithMany()
                        .HasForeignKey("AnswerCentralPolicyProvinceStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.CentralPolicyEventQuestion", "CentralPolicyEventQuestion")
                        .WithMany("AnswerCentralPolicyProvinces")
                        .HasForeignKey("CentralPolicyEventQuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.CentralPolicyProvince", "CentralPolicyProvince")
                        .WithMany("AnswerCentralPolicyProvinces")
                        .HasForeignKey("CentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerCentralPolicyProvinceStatus", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyEvent", "CentralPolicyEvent")
                        .WithMany()
                        .HasForeignKey("CentralPolicyEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerExecutiveOrderFile", b =>
                {
                    b.HasOne("InspecWeb.Models.ExecutiveOrderAnswerDetail", "ExecutiveOrderAnswerDetail")
                        .WithMany("AnswerExecutiveOrderFiles")
                        .HasForeignKey("ExecutiveOrderAnswerDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerRecommenDationInspector", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectGroup", "SubjectGroup")
                        .WithMany("AnswerRecommenDationInspectors")
                        .HasForeignKey("SubjectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerRequestOrderFile", b =>
                {
                    b.HasOne("InspecWeb.Models.RequestOrderAnswerDetail", "RequestOrderAnswerDetail")
                        .WithMany("AnswerRequestOrderFiles")
                        .HasForeignKey("RequestOrderAnswerDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestion", b =>
                {
                    b.HasOne("InspecWeb.Models.AnswerSubquestionStatus", "AnswerSubquestionStatus")
                        .WithMany()
                        .HasForeignKey("AnswerSubquestionStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.SubquestionCentralPolicyProvince", "SubquestionCentralPolicyProvince")
                        .WithMany("AnswerSubquestions")
                        .HasForeignKey("SubquestionCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestionFile", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany("AnswerSubquestionFiles")
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestionOutsider", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.SubquestionCentralPolicyProvince", "SubquestionCentralPolicyProvince")
                        .WithMany("AnswerSubquestionOutsiders")
                        .HasForeignKey("SubquestionCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.AnswerSubquestionStatus", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany("AnswerSubquestionStatuses")
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ApplicationUser", b =>
                {
                    b.HasOne("InspecWeb.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Ministry", "Ministries")
                        .WithMany()
                        .HasForeignKey("MinistryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartments")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Side", "Sides")
                        .WithMany()
                        .HasForeignKey("SideId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Subdistrict", "Subdistricts")
                        .WithMany()
                        .HasForeignKey("SubdistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CalendarFile", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany()
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.InspectionPlanEvent", "InspectionPlanEvent")
                        .WithMany()
                        .HasForeignKey("InspectionPlanEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralDepartment", b =>
                {
                    b.HasOne("InspecWeb.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralDepartmentProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralDepartment", "CentralDepartment")
                        .WithMany()
                        .HasForeignKey("CentralDepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicy", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.FiscalYearNew", "FiscalYearNew")
                        .WithMany("CentralPolicies")
                        .HasForeignKey("FiscalYearNewId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.InspectionPlanEvent", null)
                        .WithMany("CentralPolicies")
                        .HasForeignKey("InspectionPlanEventId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.Typeexaminationplan", "Typeexaminationplan")
                        .WithMany()
                        .HasForeignKey("TypeexaminationplanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyDate", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("CentralPolicyDates")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyEvent", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("CentralPolicyEvents")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.InspectionPlanEvent", "InspectionPlanEvent")
                        .WithMany("CentralPolicyEvents")
                        .HasForeignKey("InspectionPlanEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyEventQuestion", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyEvent", "CentralPolicyEvent")
                        .WithMany("CentralPolicyEventQuestions")
                        .HasForeignKey("CentralPolicyEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyFile", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("CentralPolicyFiles")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("CentralPolicyProvinces")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyProvinceEvent", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyProvince", "CentralPolicyProvince")
                        .WithMany()
                        .HasForeignKey("CentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.InspectionPlanEvent", "InspectionPlanEvent")
                        .WithMany()
                        .HasForeignKey("InspectionPlanEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyUser", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyGroup", "CentralPolicyGroup")
                        .WithMany("CentralPolicyUsers")
                        .HasForeignKey("CentralPolicyGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("CentralPolicyUser")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.InspectionPlanEvent", "InspectionPlanEvent")
                        .WithMany("CentralPolicyUsers")
                        .HasForeignKey("InspectionPlanEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.CentralPolicyUserFile", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyGroup", "CentralPolicyGroup")
                        .WithMany("CentralPolicyUserFiles")
                        .HasForeignKey("CentralPolicyGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Department", b =>
                {
                    b.HasOne("InspecWeb.Models.Ministry", "Ministries")
                        .WithMany("Departments")
                        .HasForeignKey("MinistryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.District", b =>
                {
                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBook", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookAccept", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "UserCreate")
                        .WithMany()
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany("ElectronicBookAccepts")
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookFile", b =>
                {
                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany("ElectronicBookFiles")
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyEvent", "CentralPolicyEvent")
                        .WithMany()
                        .HasForeignKey("CentralPolicyEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany("ElectronicBookGroups")
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookInvite", b =>
                {
                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany("ElectronicBookInvites")
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookOtherAccept", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "UserCreate")
                        .WithMany()
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.ElectronicBookProvincialDepartment", "ElectronicBookProvincialDepartment")
                        .WithMany("ElectronicBookOtherAccepts")
                        .HasForeignKey("ElectronicBookProvincialDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartment")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookProceed", b =>
                {
                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany()
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookProvinceApproveFile", b =>
                {
                    b.HasOne("InspecWeb.Models.ElectronicBookAccept", "ElectronicBookAccept")
                        .WithMany("ElectronicBookProvinceApproveFiles")
                        .HasForeignKey("ElectronicBookAcceptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookProvincialDepartment", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "UserCreate")
                        .WithMany()
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany("ElectronicBookProvincialDepartments")
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartments")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "UserProvincialDepartment")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ElectronicBookSuggestGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyEvent", "CentralPolicyEvent")
                        .WithMany()
                        .HasForeignKey("CentralPolicyEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ElectronicBook", "ElectronicBook")
                        .WithMany("ElectronicBookSuggestGroups")
                        .HasForeignKey("ElectronicBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrder", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrderAnswer", b =>
                {
                    b.HasOne("InspecWeb.Models.ExecutiveOrder", "ExecutiveOrder")
                        .WithMany("ExecutiveOrderAnswers")
                        .HasForeignKey("ExecutiveOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrderAnswerDetail", b =>
                {
                    b.HasOne("InspecWeb.Models.ExecutiveOrderAnswer", "ExecutiveOrderAnswer")
                        .WithMany("ExecutiveOrderAnswerDetails")
                        .HasForeignKey("ExecutiveOrderAnswerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ExecutiveOrderFile", b =>
                {
                    b.HasOne("InspecWeb.Models.ExecutiveOrder", "ExecutiveOrder")
                        .WithMany("ExecutiveOrderFiles")
                        .HasForeignKey("ExecutiveOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ExportRegistration", b =>
                {
                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ExportReportBody", b =>
                {
                    b.HasOne("InspecWeb.Models.ExportReportHead", "ExportReportHead")
                        .WithMany()
                        .HasForeignKey("ExportReportHeadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ExportReportHead", b =>
                {
                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.FiscalYearRelation", b =>
                {
                    b.HasOne("InspecWeb.Models.FiscalYear", "FiscalYear")
                        .WithMany("FiscalYearRelations")
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ImportReport", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.FiscalYear", "FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "Commander")
                        .WithMany()
                        .HasForeignKey("SendCommander")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.Sector", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ImportReportFile", b =>
                {
                    b.HasOne("InspecWeb.Models.ImportReport", "ImportReport")
                        .WithMany("ImportReportFiles")
                        .HasForeignKey("ImportReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ImportReportGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyEvent", "CentralPolicyEvent")
                        .WithMany()
                        .HasForeignKey("CentralPolicyEventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ImportReport", "ImportReport")
                        .WithMany("ImportReportGroups")
                        .HasForeignKey("ImportReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.InspectionPlanEvent", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartment")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentIdCreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.InspectorRegion", b =>
                {
                    b.HasOne("InspecWeb.Models.Inspector", "Inspector")
                        .WithMany("InspectorRegions")
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Log", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.MinistermonitoringRegion", b =>
                {
                    b.HasOne("InspecWeb.Models.Ministermonitoring", "Ministermonitoring")
                        .WithMany("MinistermonitoringRegions")
                        .HasForeignKey("MinistermonitoringId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Notification", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany()
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany("notification")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.Province", b =>
                {
                    b.HasOne("InspecWeb.Models.ProvincesGroup", "ProvincesGroups")
                        .WithMany("Provinces")
                        .HasForeignKey("ProvincesGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Region", null)
                        .WithMany("Provinces")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.Sector", "Sectors")
                        .WithMany("Provinces")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ProvincialDepartment", b =>
                {
                    b.HasOne("InspecWeb.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ProvincialDepartmentProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartment")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.ReportCommander", b =>
                {
                    b.HasOne("InspecWeb.Models.ImportReport", "ImportReport")
                        .WithMany("ReportCommanders")
                        .HasForeignKey("ImportReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserCommanderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrder", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrderAnswer", b =>
                {
                    b.HasOne("InspecWeb.Models.RequestOrder", "RequestOrder")
                        .WithMany("RequestOrderAnswers")
                        .HasForeignKey("RequestOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrderAnswerDetail", b =>
                {
                    b.HasOne("InspecWeb.Models.RequestOrderAnswer", "RequestOrderAnswer")
                        .WithMany("RequestOrderAnswerDetails")
                        .HasForeignKey("RequestOrderAnswerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.RequestOrderFile", b =>
                {
                    b.HasOne("InspecWeb.Models.RequestOrder", "RequestOrder")
                        .WithMany("RequestOrderFiles")
                        .HasForeignKey("RequestOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SetinspectionareaFile", b =>
                {
                    b.HasOne("InspecWeb.Models.FiscalYear", "FiscalYear")
                        .WithMany("SetinspectionareaFiles")
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Subdistrict", b =>
                {
                    b.HasOne("InspecWeb.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Subject", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("Subjects")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyProvince", "CentralPolicyProvince")
                        .WithMany("SubjectCentralPolicyProvinces")
                        .HasForeignKey("CentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.SubjectGroup", "SubjectGroup")
                        .WithMany("SubjectCentralPolicyProvinces")
                        .HasForeignKey("SubjectGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvinceFile", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany("SubjectCentralPolicyProvinceFiles")
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvinceGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartment")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.SubquestionCentralPolicyProvince", "SubquestionCentralPolicyProvince")
                        .WithMany("SubjectCentralPolicyProvinceGroups")
                        .HasForeignKey("SubquestionCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectCentralPolicyProvinceUserGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany()
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.SubquestionCentralPolicyProvince", null)
                        .WithMany("SubjectCentralPolicyProvinceUserGroups")
                        .HasForeignKey("SubquestionCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectDate", b =>
                {
                    b.HasOne("InspecWeb.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectDateCentralPolicyProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyDateProvince", "CentralPolicyDateProvince")
                        .WithMany()
                        .HasForeignKey("CentralPolicyDateProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany("SubjectDateCentralPolicyProvinces")
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectEventFile", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectGroup", "SubjectGroup")
                        .WithMany("SubjectEventFiles")
                        .HasForeignKey("SubjectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicy", "CentralPolicy")
                        .WithMany("SubjectGroups")
                        .HasForeignKey("CentralPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartment")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentIdCreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubjectGroupPeopleQuestion", b =>
                {
                    b.HasOne("InspecWeb.Models.CentralPolicyEvent", "CentralPolicyEvent")
                        .WithMany("SubjectGroupPeopleQuestions")
                        .HasForeignKey("CentralPolicyEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.SubjectGroup", "SubjectGroup")
                        .WithMany("SubjectGroupPeopleQuestions")
                        .HasForeignKey("SubjectGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.Subquestion", b =>
                {
                    b.HasOne("InspecWeb.Models.Subject", "Subject")
                        .WithMany("Subquestions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubquestionCentralPolicyProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany("SubquestionCentralPolicyProvinces")
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubquestionChoice", b =>
                {
                    b.HasOne("InspecWeb.Models.Subquestion", "Subquestion")
                        .WithMany("SubquestionChoices")
                        .HasForeignKey("SubquestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SubquestionChoiceCentralPolicyProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.SubquestionCentralPolicyProvince", "SubquestionCentralPolicyProvince")
                        .WithMany("SubquestionChoiceCentralPolicyProvinces")
                        .HasForeignKey("SubquestionCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.SuggestionSubject", b =>
                {
                    b.HasOne("InspecWeb.Models.SubjectCentralPolicyProvince", "SubjectCentralPolicyProvince")
                        .WithMany("SuggestionSubjects")
                        .HasForeignKey("SubjectCentralPolicyProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingCondition", b =>
                {
                    b.HasOne("InspecWeb.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingDocument", b =>
                {
                    b.HasOne("InspecWeb.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingPhase", b =>
                {
                    b.HasOne("InspecWeb.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgram", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingPhase", "TrainingPhase")
                        .WithMany()
                        .HasForeignKey("TrainingPhaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgramFile", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingProgram", "TrainingProgram")
                        .WithMany()
                        .HasForeignKey("TrainingProgramId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgramLecturer", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingLecturer", "TrainingLecturer")
                        .WithMany()
                        .HasForeignKey("TrainingLecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.TrainingProgram", "TrainingProgram")
                        .WithMany()
                        .HasForeignKey("TrainingProgramId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingProgramLoginQRCode", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingProgram", null)
                        .WithOne("TrainingProgramLoginQRCodes")
                        .HasForeignKey("InspecWeb.Models.TrainingProgramLoginQRCode", "TrainingProgramId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegister", b =>
                {
                    b.HasOne("InspecWeb.Models.ProvincialDepartment", "ProvincialDepartments")
                        .WithMany()
                        .HasForeignKey("ProvincialDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegisterCondition", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingCondition", "TrainingCondition")
                        .WithMany("TrainingRegisterConditions")
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.TrainingRegister", "TrainingRegister")
                        .WithMany("TrainingRegisterConditions")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegisterFile", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingRegister", "TrainingRegister")
                        .WithMany()
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingRegisterGroup", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingRegister", "TrainingRegister")
                        .WithMany()
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingSurvey", b =>
                {
                    b.HasOne("InspecWeb.Models.Training", null)
                        .WithMany("TrainingSurveys")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InspecWeb.Models.TrainingSurveyTopic", "TrainingSurveyTopic")
                        .WithMany()
                        .HasForeignKey("TrainingSurveyTopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.TrainingSurveyAnswer", b =>
                {
                    b.HasOne("InspecWeb.Models.TrainingSurvey", "TrainingSurvey")
                        .WithMany()
                        .HasForeignKey("TrainingSurveyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.UserProvince", b =>
                {
                    b.HasOne("InspecWeb.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany("UserProvince")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.UserRegion", b =>
                {
                    b.HasOne("InspecWeb.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany("UserRegion")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InspecWeb.Models.UserTokenMobile", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", "User")
                        .WithMany("UserTokenMobiles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InspecWeb.Models.Village", b =>
                {
                    b.HasOne("InspecWeb.Models.Subdistrict", "Subdistrict")
                        .WithMany("Village")
                        .HasForeignKey("SubdistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InspecWeb.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
