// Generated by https://quicktype.io

namespace InspecWeb.ViewModel
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    public partial class OtpsFiscalYearProvinces
    {
        
        [JsonProperty("Year")]
        public List<OtpsFiscalYearProvince> FiscalYears { get; set; }
    }
    public partial class OtpsFiscalYearProvince
    {
        [JsonProperty("Year")]
        public long Year { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Region")]
        public Region Region { get; set; }

        [JsonProperty("Projects")]
        public Projects Projects { get; set; }
    }

    public partial class Projects
    {
        [JsonProperty("Count")]
        public long Count { get; set; }

        [JsonProperty("Completed")]
        public long Completed { get; set; }

        [JsonProperty("TotalBudget")]
        public double TotalBudget { get; set; }

        [JsonProperty("TotalAmount")]
        public double TotalAmount { get; set; }

        [JsonProperty("TotalSpent")]
        public double TotalSpent { get; set; }

        [JsonProperty("TotalPercent")]
        public double TotalPercent { get; set; }
    }

    public partial class Region
    {
        [JsonProperty("Id")]
        public long Id { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }
    }

    public partial class OtpsFiscalYearProvince
    {
        public static OtpsFiscalYearProvince FromJson(string json) => JsonConvert.DeserializeObject<OtpsFiscalYearProvince>(json, ConverterOtpsFiscalYearProvince.Settings);
    }

    public static class SerializeOtpsFiscalYearProvince
    {
        public static string ToJson(this OtpsFiscalYearProvince self) => JsonConvert.SerializeObject(self, ConverterOtpsFiscalYearProvince.Settings);
    }

    internal static class ConverterOtpsFiscalYearProvince
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
