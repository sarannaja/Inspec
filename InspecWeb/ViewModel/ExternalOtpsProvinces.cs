// Generated by https://quicktype.io
 using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
namespace InspecWeb.ViewModel
{
   

    public partial class OtpsProvince
    {
        [JsonProperty("Id")]
        public long Id { get; set; }

        [JsonProperty("ISO")]
        public string Iso { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("EnglishName")]
        public string EnglishName { get; set; }

        [JsonProperty("Seal")]
        public string Seal { get; set; }

        [JsonProperty("Motto")]
        public string Motto { get; set; }

        // [JsonProperty("Color")]
        // public object Color { get; set; }

        [JsonProperty("Tree")]
        public string Tree { get; set; }

        [JsonProperty("Flower")]
        public string Flower { get; set; }

        // [JsonProperty("Household")]
        // public object Household { get; set; }

        // [JsonProperty("Male")]
        // public object Male { get; set; }

        // [JsonProperty("Female")]
        // public object Female { get; set; }

        // [JsonProperty("District")]
        // public long District { get; set; }

        // [JsonProperty("SubDistrict")]
        // public object SubDistrict { get; set; }

        // [JsonProperty("Village")]
        // public object Village { get; set; }

        // [JsonProperty("Area")]
        // public double Area { get; set; }

        // [JsonProperty("Density")]
        // public double Density { get; set; }

        // [JsonProperty("HDI")]
        // public double Hdi { get; set; }

        [JsonProperty("Latitude")]
        public double Latitude { get; set; }

        [JsonProperty("Longitude")]
        public double Longitude { get; set; }

        [JsonProperty("Special")]
        public bool Special { get; set; }

        // [JsonProperty("Strategic")]
        // public object Strategic { get; set; }

        // [JsonProperty("Career")]
        // public object Career { get; set; }

        [JsonProperty("TownHallAddress")]
        public string TownHallAddress { get; set; }

        [JsonProperty("TownHallPhone")]
        public string TownHallPhone { get; set; }

        [JsonProperty("Website")]
        public Uri Website { get; set; }

        // [JsonProperty("Policy")]
        // public object Policy { get; set; }

        [JsonProperty("CreatedAt")]
        public DateTimeOffset CreatedAt { get; set; }

        [JsonProperty("UpdatedAt")]
        public DateTimeOffset UpdatedAt { get; set; }

        // [JsonProperty("FiscalYearRegionProvinces")]
        // public object[] FiscalYearRegionProvinces { get; set; }

        // [JsonProperty("Projects")]
        // public object[] Projects { get; set; }

        // [JsonProperty("Emergencies")]
        // public object[] Emergencies { get; set; }

        // [JsonProperty("Works")]
        // public object[] Works { get; set; }

        // [JsonProperty("Residuals")]
        // public object[] Residuals { get; set; }

        // [JsonProperty("Activities")]
        // public object[] Activities { get; set; }

        // [JsonProperty("Governors")]
        // public object[] Governors { get; set; }
    }

    public partial class OtpsProvince
    {
        public static OtpsProvince FromJson(string json) => JsonConvert.DeserializeObject<OtpsProvince>(json, ConverterOtpsProvince.Settings);
    }

    public static class SerializeOtpsProvince
    {
        public static string ToJson(this OtpsProvince self) => JsonConvert.SerializeObject(self, ConverterOtpsProvince.Settings);
    }

    internal static class ConverterOtpsProvince
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
